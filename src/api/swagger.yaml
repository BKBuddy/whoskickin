swagger: '2.0'
info:
  description: >-
    This is the api documentation for the world famous whoskickin project. You can download all of our hard work at our [github repo](https://github.com/BKBuddy/whoskickin) 
  version: 1.0.0
  title: Whoskickin
  termsOfService: 'https://en.wikipedia.org/wiki/Uncle_Ben#%22With_great_power_comes_great_responsibility%22'
  license:
    name: MIT License
    url: 'https://opensource.org/licenses/MIT'
consumes:
  - application/json
produces:
  - application/json
basePath: /api
schemes:
  - http
paths:
  /all_kicks:
    get:
      tags:
        - All Kicks
      summary: Get kickoff And receiving Team pairs
      description: 'This calls the single game feed for each game and builds a dictionary that uses a games eid as the
        key. The value is a list containing two dictionaries - one for each team. The team dictionary contains a str
        of the team abbreviation, a boolean if the team is home, and a boolean if the team will kickoff in the second
        half. is_kickoff will be None/null if the first half kick has not been posted to nfl.com yet.'
      operationId: controllers.kick_controller.get_all_kicks
      produces:
        - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/MultipleGames'

  /single_game/{eid}:
    get:
      operationId: controllers.kick_controller.get_single_game
      tags:
        - Single Game
      summary: Retrieve one game's kicking and receiving team abbreviations
      description: Retrieve one game's kicking and receiving team
      produces:
        - application/json
      parameters:
        - name: eid
          in: path
          description: eid is the string identifier of a game
          type: string
          required: True
      responses:
        200:
          description: Successfully retrieved kicking data for game
          schema:
            $ref: '#/definitions/SingleGame'

  /schedule:
    get:
      tags:
        - Current Schedule
      summary: Get the schedule for the current week.
      description: Retrieves metadata about this week's games and returns an object of objects for each game.
      operationId: controllers.schedule_controller.get_current_week_schedule
      produces:
        - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Schedule'

definitions:
  MultipleGames:
    type: object
    properties:
      eid:
        type: array
        items:
          $ref: '#/definitions/Team'
    example:
      2018101100:
        - team_abbr: NYG
          is_kicking: true
          is_home: true
        - team_abbr: PHI
          is_kicking: false
          is_home: false
      2018101401:
        - team_abbr: CLE
          is_kicking: 'null'
          is_home: true
        - team_abbr: LAC
          is_kicking: 'null'
          is_home: false

  SingleGame:
    type: object
    properties:
      eid:
        type: array
        items:
          $ref: '#/definitions/Team'
    example:
      2018101100:
        - team_abbr: NYG
          is_kicking: true
          is_home: true
        - team_abbr: PHI
          is_kicking: false
          is_home: false

  Team:
    type: object
    properties:
      team_abbr:
        type: string
      is_home:
        type: boolean
      is_kicking:
        type: boolean

  Schedule:
    type: object
    properties:
      eid:
        type: object
        properties:
          day:
            type: string
          kickoff_datetime:
            type: string
          game_status:
            type: string
          home_team_abbr:
            type: string
          home_team_name:
            type: string
          home_score:
            type: string
          visitor_team_abbr:
            type: string
          visitor_team_name:
            type: string
          visitor_score:
            type: string
          game_type:
            type: string
